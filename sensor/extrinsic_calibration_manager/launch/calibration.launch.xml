<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="mode"/>
  <arg name="sensor_model"/>
  <arg name="vehicle_model"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="map_path" default="$(env HOME)/map/"/>
  <arg name="lanelet2_map_file" default="lanelet2_map.osm"/>
  <arg name="pointcloud_map_file" default="pointcloud_map.pcd"/>
  <arg name="logging_simulator" default="true"/>
  <arg name="map_calibration_area_file" default="map_calibration_area.pcd"/>
  <arg name="use_calibration_area_map" default="true"/>

  <!-- tag_based & interactive only -->
  <arg name="camera_name" default=""/>
  <!--e.g, camera6-->
  <arg name="calibration_rviz" default="true"/>

  <!-- interactive only -->
  <arg name="interactive_use_concatenated" default="true"/>

  <!-- logging simulator -->
  <include if="$(var logging_simulator)" file="$(find-pkg-share autoware_launch)/launch/logging_simulator.launch.xml">
    <arg name="sensor_model" value="$(var sensor_model)"/>
    <arg name="vehicle_model" value="$(var vehicle_model)"/>
    <arg name="vehicle_id" value="$(var vehicle_id)"/>
    <arg name="map_path" value="$(var map_path)"/>
    <arg name="lanelet2_map_file" value="$(var lanelet2_map_file)"/>
    <arg name="pointcloud_map_file" value="$(var pointcloud_map_file)"/>
    <arg name="vehicle" value="true"/>
    <arg name="system" value="false"/>
    <arg name="map" value="true"/>
    <arg name="sensing" value="true"/>
    <arg name="localization" value="true"/>
    <arg name="perception" value="false"/>
    <arg name="planning" value="false"/>
    <arg name="control" value="false"/>
    <arg name="rviz" value="false"/>
  </include>

  <!-- fake transform -->
  <node pkg="tf2_ros" exec="static_transform_publisher" name="map2base_link" output="screen" args="0 0 0 0 0 0 map base_link"/>

  <!-- calibration_manager -->
  <group>
    <group if="$(eval &quot;'$(var mode)' == 'manual' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/manual.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
      </include>
      <node pkg="rqt_reconfigure" exec="rqt_reconfigure" name="rqt_reconfigure" output="screen"/>
      <node
        pkg="rviz2"
        exec="rviz2"
        name="rviz2"
        output="screen"
        args="
        -d $(find-pkg-share extrinsic_calibration_manager)/config/$(var sensor_model)/extrinsic_manual_calibration.rviz"
        if="$(var calibration_rviz)"
      />
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'map_based' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/map_based.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="map_path" value="$(var map_path)"/>
        <arg name="map_calibration_area_file" value="$(var map_calibration_area_file)"/>
        <arg name="use_calibration_area_map" value="$(var use_calibration_area_map)"/>
        <arg name="calibration_rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'tag_based' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/tag_based.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="camera_name" value="$(var camera_name)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'tag_based_base' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/tag_based_base.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="camera_name" value="$(var camera_name)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'tag_based_lidars' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/tag_based_lidars.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="camera_name" value="$(var camera_name)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'tag_based_all' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/tag_based_all.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="camera_name" value="$(var camera_name)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'interactive' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/interactive.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="camera_name" value="$(var camera_name)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
        <arg name="use_concatenated_pointcloud" value="$(var interactive_use_concatenated)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'ground_plane' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/ground_plane.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="map_path" value="$(var map_path)"/>
        <arg name="pointcloud_map_file" value="$(var pointcloud_map_file)"/>
        <arg name="map_calibration_area_file" value="$(var map_calibration_area_file)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'lidar_to_lidar_2d' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/lidar_to_lidar_2d.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>
    <group if="$(eval &quot;'$(var mode)' == 'mapping_based' &quot;)">
      <include file="$(find-pkg-share extrinsic_calibration_manager)/launch/$(var sensor_model)/mapping_based.launch.xml">
        <arg name="vehicle_id" value="$(var vehicle_id)"/>
        <arg name="rviz" value="$(var calibration_rviz)"/>
      </include>
    </group>

    <group if="$(eval &quot;'$(var mode)' == 'target_based' &quot;)">
      <!-- not implemented yet -->
    </group>
  </group>
</launch>
